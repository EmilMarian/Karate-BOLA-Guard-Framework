{
  "method": "GET",
  "parameters": [
    {
      "description": "Authentication token. Requires scope: `workflow.steps:execute`",
      "in": "header",
      "name": "token",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`.",
      "in": "query",
      "name": "workflow_step_edit_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables).",
      "in": "query",
      "name": "inputs",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed.",
      "in": "query",
      "name": "outputs",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "An optional field that can be used to override the step name that is shown in the Workflow Builder.",
      "in": "query",
      "name": "step_name",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "An optional field that can be used to override app image that is shown in the Workflow Builder.",
      "in": "query",
      "name": "step_image_url",
      "schema": {
        "type": "string"
      }
    }
  ],
  "path": "/workflows.updateStep",
  "requestBody": {},
  "responses": {
    "default": {
      "content": {
        "application/json": {
          "examples": {
            "response": {
              "value": {
                "error": "invalid_auth",
                "ok": false
              }
            }
          },
          "schema": {
            "additionalProperties": true,
            "description": "This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.",
            "properties": {
              "ok": {
                "enum": [
                  false
                ],
                "title": "default failure response",
                "type": "boolean"
              }
            },
            "required": [
              "ok"
            ],
            "title": "Default error template",
            "type": "object"
          }
        }
      },
      "description": "Typical error response"
    }
  }
}