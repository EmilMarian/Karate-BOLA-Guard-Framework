{
  "method": "POST",
  "parameters": [
    {
      "description": "The ID of the `Category` to which the resource belongs.\n",
      "in": "path",
      "name": "category_id",
      "required": true,
      "schema": {
        "format": "int",
        "type": "number"
      }
    }
  ],
  "path": "/catalog/categories/{category_id}/metafields",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "description": "Allows app partners to write custom data to various resources in the API.\n",
          "properties": {
            "created_at": {
              "description": "Date and time of the metafield's creation.\n",
              "format": "date-time",
              "type": "string"
            },
            "description": {
              "description": "Description for the metafields.\n",
              "type": "string"
            },
            "id": {
              "description": "The unique identifier for the metafields.\n",
              "type": "integer"
            },
            "key": {
              "description": "The name of the field, for example: `location_id`, `color`.\n",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace for the metafield, for organizational purposes.\n",
              "type": "string"
            },
            "permission_set": {
              "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`).\n",
              "enum": [
                "app_only",
                "read",
                "write"
              ],
              "type": "string"
            },
            "resource_id": {
              "description": "The unique identifier for the resource with which the metafield is associated.\n",
              "type": "integer"
            },
            "resource_type": {
              "description": "The type of resource with which the metafield is associated.\n",
              "enum": [
                "category",
                "brand",
                "product",
                "variant"
              ],
              "type": "string"
            },
            "updated_at": {
              "description": "Date and time when the metafield was last updated.",
              "format": "date-time",
              "type": "string"
            },
            "value": {
              "description": "The value of the field, for example: `1`, `blue`\n",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "description": "A `Metafield` object.\n",
    "required": true
  },
  "responses": {
    "409": {
      "content": {
        "application/json": {
          "schema": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseError"
              },
              {
                "properties": {
                  "errors": {
                    "$ref": "#/components/schemas/DetailedErrors"
                  }
                },
                "type": "object"
              }
            ]
          }
        }
      },
      "description": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n"
    }
  }
}