{
  "method": "PUT",
  "parameters": [
    {
      "description": "The ID of the `Subscriber` requested.\n",
      "in": "path",
      "name": "subscriber_id",
      "required": true,
      "schema": {
        "format": "int",
        "type": "number"
      }
    }
  ],
  "path": "/customers/subscribers/{subscriber_id}",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "date_created": {
              "description": "The date on which the subscriber was created.\n",
              "format": "data-time",
              "type": "string"
            },
            "date_modified": {
              "description": "The date on which the subscriber was modified.\n",
              "format": "data-time",
              "type": "string"
            },
            "email": {
              "description": "The email of the subscriber. Must be unique.\n",
              "type": "string"
            },
            "first_name": {
              "description": "The first name of the subscriber.\n",
              "type": "string"
            },
            "id": {
              "description": "The unique numeric ID of the subscriber; increments sequentially.\n",
              "type": "integer"
            },
            "last_name": {
              "description": "The last name of the subscriber.\n",
              "type": "string"
            },
            "order_id": {
              "description": "The ID of the source order, if source was an order.\n",
              "type": "integer"
            },
            "source": {
              "description": "The source of the subscriber. Values are: `storefront`, `order`, or `custom`.\n",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "description": "Returns a `Subscriber` object.\n",
    "required": true
  },
  "responses": {
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error payload for the BigCommerce API.\n",
            "properties": {
              "instance": {
                "type": "string"
              },
              "status": {
                "description": "404 HTTP status code.\n",
                "type": "integer"
              },
              "title": {
                "description": "The error title describing the particular error.",
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "The resource was not found.\n"
    }
  }
}