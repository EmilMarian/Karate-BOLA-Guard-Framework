{
  "method": "POST",
  "parameters": [],
  "path": "/catalog/categories",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "description": "A BigCommerce category object.\n",
          "properties": {
            "custom_url": {
              "$ref": "#/components/schemas/CustomUrl"
            },
            "default_product_sort": {
              "description": "Determines how the products are sorted on category page load.\n",
              "enum": [
                "use_store_settings",
                "featured",
                "newest",
                "best_selling",
                "alpha_asc",
                "alpha_desc",
                "avg_customer_review",
                "price_asc",
                "price_desc"
              ],
              "type": "string"
            },
            "description": {
              "description": "The product description, which can include HTML formatting.\n",
              "type": "string"
            },
            "id": {
              "description": "The unique numeric ID of the category; increments sequentially.\n",
              "type": "integer"
            },
            "image_url": {
              "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
              "type": "string"
            },
            "is_visible": {
              "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n",
              "type": "boolean"
            },
            "layout_file": {
              "description": "The layout template file used to render this category.\n",
              "type": "string"
            },
            "meta_description": {
              "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
              "type": "string"
            },
            "meta_keywords": {
              "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\n",
              "type": "string"
            },
            "page_title": {
              "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
              "type": "string"
            },
            "parent_id": {
              "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n",
              "type": "integer"
            },
            "search_keywords": {
              "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
              "type": "string"
            },
            "sort_order": {
              "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
              "type": "integer"
            },
            "views": {
              "description": "Number of views the category has on the storefront.\n",
              "type": "integer"
            }
          },
          "type": "object"
        }
      }
    },
    "description": "A BigCommerce `Category` object.\n",
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Response payload for the Bigcommerce API.\n",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Category"
              },
              "meta": {
                "$ref": "#/components/schemas/Meta"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "A category object.\n"
    }
  }
}