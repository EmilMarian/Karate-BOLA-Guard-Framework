{
  "method": "GET",
  "parameters": [
    {
      "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
      "in": "query",
      "name": "ending_before",
      "required": false,
      "schema": {
        "maxLength": 5000,
        "type": "string"
      },
      "style": "form"
    },
    {
      "description": "Specifies which fields in the response should be expanded.",
      "explode": true,
      "in": "query",
      "name": "expand",
      "required": false,
      "schema": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "style": "deepObject"
    },
    {
      "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "type": "integer"
      },
      "style": "form"
    },
    {
      "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
      "in": "query",
      "name": "starting_after",
      "required": false,
      "schema": {
        "maxLength": 5000,
        "type": "string"
      },
      "style": "form"
    },
    {
      "description": "Filter results to only include meters with the given status.",
      "in": "query",
      "name": "status",
      "required": false,
      "schema": {
        "enum": [
          "active",
          "inactive"
        ],
        "type": "string"
      },
      "style": "form"
    }
  ],
  "path": "/v1/billing/meters",
  "requestBody": {
    "content": {
      "application/x-www-form-urlencoded": {
        "encoding": {},
        "schema": {
          "additionalProperties": false,
          "properties": {},
          "type": "object"
        }
      }
    },
    "required": false
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "",
            "properties": {
              "data": {
                "items": {
                  "description": "Meters specify how to aggregate meter events over a billing period. Meter events represent the actions that customers take in your system. Meters attach to prices and form the basis of the bill.\n\nRelated guide: [Usage based billing](https://docs.stripe.com/billing/subscriptions/usage-based)",
                  "properties": {
                    "created": {
                      "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "customer_mapping": {
                      "$ref": "#/components/schemas/billing_meter_resource_customer_mapping_settings"
                    },
                    "default_aggregation": {
                      "$ref": "#/components/schemas/billing_meter_resource_aggregation_settings"
                    },
                    "display_name": {
                      "description": "The meter's name.",
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "event_name": {
                      "description": "The name of the meter event to record usage for. Corresponds with the `event_name` field on meter events.",
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "event_time_window": {
                      "description": "The time window to pre-aggregate meter events for, if any.",
                      "enum": [
                        "day",
                        "hour"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique identifier for the object.",
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "livemode": {
                      "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "billing.meter"
                      ],
                      "type": "string"
                    },
                    "status": {
                      "description": "The meter's status.",
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "type": "string"
                    },
                    "status_transitions": {
                      "$ref": "#/components/schemas/billing_meter_resource_billing_meter_status_transitions"
                    },
                    "updated": {
                      "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
                      "format": "unix-time",
                      "type": "integer"
                    },
                    "value_settings": {
                      "$ref": "#/components/schemas/billing_meter_resource_billing_meter_value"
                    }
                  },
                  "required": [
                    "created",
                    "customer_mapping",
                    "default_aggregation",
                    "display_name",
                    "event_name",
                    "id",
                    "livemode",
                    "object",
                    "status",
                    "status_transitions",
                    "updated",
                    "value_settings"
                  ],
                  "title": "BillingMeter",
                  "type": "object",
                  "x-expandableFields": [
                    "customer_mapping",
                    "default_aggregation",
                    "status_transitions",
                    "value_settings"
                  ],
                  "x-resourceId": "billing.meter"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "pattern": "^/v1/billing/meters",
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "BillingMeterResourceBillingMeterList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          }
        }
      },
      "description": "Successful response."
    }
  }
}