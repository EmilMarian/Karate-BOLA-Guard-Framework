{
  "method": "GET",
  "parameters": [
    {
      "description": "Only return prices that are active or inactive (e.g., pass `false` to list all inactive prices).",
      "in": "query",
      "name": "active",
      "required": false,
      "schema": {
        "type": "boolean"
      },
      "style": "form"
    },
    {
      "description": "A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.",
      "explode": true,
      "in": "query",
      "name": "created",
      "required": false,
      "schema": {
        "anyOf": [
          {
            "properties": {
              "gt": {
                "type": "integer"
              },
              "gte": {
                "type": "integer"
              },
              "lt": {
                "type": "integer"
              },
              "lte": {
                "type": "integer"
              }
            },
            "title": "range_query_specs",
            "type": "object"
          },
          {
            "type": "integer"
          }
        ]
      },
      "style": "deepObject"
    },
    {
      "description": "Only return prices for the given currency.",
      "in": "query",
      "name": "currency",
      "required": false,
      "schema": {
        "format": "currency",
        "type": "string"
      },
      "style": "form"
    },
    {
      "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
      "in": "query",
      "name": "ending_before",
      "required": false,
      "schema": {
        "maxLength": 5000,
        "type": "string"
      },
      "style": "form"
    },
    {
      "description": "Specifies which fields in the response should be expanded.",
      "explode": true,
      "in": "query",
      "name": "expand",
      "required": false,
      "schema": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "style": "deepObject"
    },
    {
      "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "type": "integer"
      },
      "style": "form"
    },
    {
      "description": "Only return the price with these lookup_keys, if any exist. You can specify up to 10 lookup_keys.",
      "explode": true,
      "in": "query",
      "name": "lookup_keys",
      "required": false,
      "schema": {
        "items": {
          "maxLength": 5000,
          "type": "string"
        },
        "type": "array"
      },
      "style": "deepObject"
    },
    {
      "description": "Only return prices for the given product.",
      "in": "query",
      "name": "product",
      "required": false,
      "schema": {
        "maxLength": 5000,
        "type": "string"
      },
      "style": "form"
    },
    {
      "description": "Only return prices with these recurring fields.",
      "explode": true,
      "in": "query",
      "name": "recurring",
      "required": false,
      "schema": {
        "properties": {
          "interval": {
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "type": "string"
          },
          "meter": {
            "maxLength": 5000,
            "type": "string"
          },
          "usage_type": {
            "enum": [
              "licensed",
              "metered"
            ],
            "type": "string"
          }
        },
        "title": "all_prices_recurring_params",
        "type": "object"
      },
      "style": "deepObject"
    },
    {
      "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
      "in": "query",
      "name": "starting_after",
      "required": false,
      "schema": {
        "maxLength": 5000,
        "type": "string"
      },
      "style": "form"
    },
    {
      "description": "Only return prices of type `recurring` or `one_time`.",
      "in": "query",
      "name": "type",
      "required": false,
      "schema": {
        "enum": [
          "one_time",
          "recurring"
        ],
        "type": "string"
      },
      "style": "form"
    }
  ],
  "path": "/v1/prices",
  "requestBody": {
    "content": {
      "application/x-www-form-urlencoded": {
        "encoding": {},
        "schema": {
          "additionalProperties": false,
          "properties": {},
          "type": "object"
        }
      }
    },
    "required": false
  },
  "responses": {
    "default": {
      "content": {
        "application/json": {
          "schema": {
            "description": "An error response from the Stripe API",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/api_errors"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Error response."
    }
  }
}