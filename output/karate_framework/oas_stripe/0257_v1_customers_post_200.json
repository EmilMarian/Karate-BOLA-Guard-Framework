{
  "method": "POST",
  "parameters": [],
  "path": "/v1/customers",
  "requestBody": {
    "content": {
      "application/x-www-form-urlencoded": {
        "encoding": {
          "address": {
            "explode": true,
            "style": "deepObject"
          },
          "cash_balance": {
            "explode": true,
            "style": "deepObject"
          },
          "expand": {
            "explode": true,
            "style": "deepObject"
          },
          "invoice_settings": {
            "explode": true,
            "style": "deepObject"
          },
          "metadata": {
            "explode": true,
            "style": "deepObject"
          },
          "preferred_locales": {
            "explode": true,
            "style": "deepObject"
          },
          "shipping": {
            "explode": true,
            "style": "deepObject"
          },
          "tax": {
            "explode": true,
            "style": "deepObject"
          },
          "tax_id_data": {
            "explode": true,
            "style": "deepObject"
          }
        },
        "schema": {
          "additionalProperties": false,
          "properties": {
            "address": {
              "anyOf": [
                {
                  "properties": {
                    "city": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "country": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "line1": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "line2": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "postal_code": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "state": {
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "title": "optional_fields_customer_address",
                  "type": "object"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ],
              "description": "The customer's address."
            },
            "balance": {
              "description": "An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.",
              "type": "integer"
            },
            "cash_balance": {
              "description": "Balance information and default balance settings for this customer.",
              "properties": {
                "settings": {
                  "properties": {
                    "reconciliation_mode": {
                      "enum": [
                        "automatic",
                        "manual",
                        "merchant_default"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "balance_settings_param",
                  "type": "object"
                }
              },
              "title": "cash_balance_param",
              "type": "object"
            },
            "coupon": {
              "maxLength": 5000,
              "type": "string"
            },
            "description": {
              "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.",
              "maxLength": 5000,
              "type": "string"
            },
            "email": {
              "description": "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.",
              "maxLength": 512,
              "type": "string"
            },
            "expand": {
              "description": "Specifies which fields in the response should be expanded.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "invoice_prefix": {
              "description": "The prefix for the customer used to generate unique invoice numbers. Must be 3\u201312 uppercase letters or numbers.",
              "maxLength": 5000,
              "type": "string"
            },
            "invoice_settings": {
              "description": "Default invoice settings for this customer.",
              "properties": {
                "custom_fields": {
                  "anyOf": [
                    {
                      "items": {
                        "properties": {
                          "name": {
                            "maxLength": 40,
                            "type": "string"
                          },
                          "value": {
                            "maxLength": 140,
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ],
                        "title": "custom_field_params",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "default_payment_method": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "footer": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "rendering_options": {
                  "anyOf": [
                    {
                      "properties": {
                        "amount_tax_display": {
                          "enum": [
                            "",
                            "exclude_tax",
                            "include_inclusive_tax"
                          ],
                          "type": "string"
                        },
                        "template": {
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "title": "customer_rendering_options_param",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                }
              },
              "title": "customer_param",
              "type": "object"
            },
            "metadata": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ],
              "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
            },
            "name": {
              "description": "The customer's full name or business name.",
              "maxLength": 256,
              "type": "string"
            },
            "next_invoice_sequence": {
              "description": "The sequence to be used on the customer's next invoice. Defaults to 1.",
              "type": "integer"
            },
            "payment_method": {
              "maxLength": 5000,
              "type": "string"
            },
            "phone": {
              "description": "The customer's phone number.",
              "maxLength": 20,
              "type": "string"
            },
            "preferred_locales": {
              "description": "Customer's preferred languages, ordered by preference.",
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "promotion_code": {
              "description": "The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.",
              "maxLength": 5000,
              "type": "string"
            },
            "shipping": {
              "anyOf": [
                {
                  "properties": {
                    "address": {
                      "properties": {
                        "city": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "country": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "line1": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "line2": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "postal_code": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "state": {
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "title": "optional_fields_customer_address",
                      "type": "object"
                    },
                    "name": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "phone": {
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "name"
                  ],
                  "title": "customer_shipping",
                  "type": "object"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ],
              "description": "The customer's shipping information. Appears on invoices emailed to this customer."
            },
            "source": {
              "maxLength": 5000,
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "tax": {
              "description": "Tax details about the customer.",
              "properties": {
                "ip_address": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ]
                },
                "validate_location": {
                  "enum": [
                    "deferred",
                    "immediately"
                  ],
                  "type": "string"
                }
              },
              "title": "shared_tax_create_param",
              "type": "object"
            },
            "tax_exempt": {
              "description": "The customer's tax exemption. One of `none`, `exempt`, or `reverse`.",
              "enum": [
                "",
                "exempt",
                "none",
                "reverse"
              ],
              "type": "string"
            },
            "tax_id_data": {
              "description": "The customer's tax IDs.",
              "items": {
                "properties": {
                  "type": {
                    "enum": [
                      "ad_nrt",
                      "ae_trn",
                      "al_tin",
                      "am_tin",
                      "ao_tin",
                      "ar_cuit",
                      "au_abn",
                      "au_arn",
                      "ba_tin",
                      "bb_tin",
                      "bg_uic",
                      "bh_vat",
                      "bo_tin",
                      "br_cnpj",
                      "br_cpf",
                      "bs_tin",
                      "by_tin",
                      "ca_bn",
                      "ca_gst_hst",
                      "ca_pst_bc",
                      "ca_pst_mb",
                      "ca_pst_sk",
                      "ca_qst",
                      "cd_nif",
                      "ch_uid",
                      "ch_vat",
                      "cl_tin",
                      "cn_tin",
                      "co_nit",
                      "cr_tin",
                      "de_stn",
                      "do_rcn",
                      "ec_ruc",
                      "eg_tin",
                      "es_cif",
                      "eu_oss_vat",
                      "eu_vat",
                      "gb_vat",
                      "ge_vat",
                      "gn_nif",
                      "hk_br",
                      "hr_oib",
                      "hu_tin",
                      "id_npwp",
                      "il_vat",
                      "in_gst",
                      "is_vat",
                      "jp_cn",
                      "jp_rn",
                      "jp_trn",
                      "ke_pin",
                      "kh_tin",
                      "kr_brn",
                      "kz_bin",
                      "li_uid",
                      "li_vat",
                      "ma_vat",
                      "md_vat",
                      "me_pib",
                      "mk_vat",
                      "mr_nif",
                      "mx_rfc",
                      "my_frp",
                      "my_itn",
                      "my_sst",
                      "ng_tin",
                      "no_vat",
                      "no_voec",
                      "np_pan",
                      "nz_gst",
                      "om_vat",
                      "pe_ruc",
                      "ph_tin",
                      "ro_tin",
                      "rs_pib",
                      "ru_inn",
                      "ru_kpp",
                      "sa_vat",
                      "sg_gst",
                      "sg_uen",
                      "si_tin",
                      "sn_ninea",
                      "sr_fin",
                      "sv_nit",
                      "th_vat",
                      "tj_tin",
                      "tr_tin",
                      "tw_vat",
                      "tz_vat",
                      "ua_vat",
                      "ug_tin",
                      "us_ein",
                      "uy_ruc",
                      "uz_tin",
                      "uz_vat",
                      "ve_rif",
                      "vn_tin",
                      "za_vat",
                      "zm_tin",
                      "zw_tin"
                    ],
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "data_params",
                "type": "object"
              },
              "type": "array"
            },
            "test_clock": {
              "description": "ID of the test clock to attach to the customer.",
              "maxLength": 5000,
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "required": false
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "This object represents a customer of your business. Use it to [create recurring charges](https://stripe.com/docs/invoicing/customer), [save payment](https://stripe.com/docs/payments/save-during-payment) and contact information,\nand track payments that belong to the same customer.",
            "properties": {
              "address": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/address"
                  }
                ],
                "description": "The customer's address.",
                "nullable": true
              },
              "balance": {
                "description": "The current balance, if any, that's stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that's added to their next invoice. The balance only considers amounts that Stripe hasn't successfully applied to any invoice. It doesn't reflect unpaid invoices. This balance is only taken into account after invoices finalize.",
                "type": "integer"
              },
              "cash_balance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/cash_balance"
                  }
                ],
                "description": "The current funds being held by Stripe on behalf of the customer. You can apply these funds towards payment intents when the source is \"cash_balance\". The `settings[reconciliation_mode]` field describes if these funds apply to these payment intents manually or automatically.",
                "nullable": true
              },
              "created": {
                "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
                "format": "unix-time",
                "type": "integer"
              },
              "currency": {
                "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "default_source": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/bank_account"
                  },
                  {
                    "$ref": "#/components/schemas/card"
                  },
                  {
                    "$ref": "#/components/schemas/source"
                  }
                ],
                "description": "ID of the default payment source for the customer.\n\nIf you use payment methods created through the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "$ref": "#/components/schemas/card"
                    },
                    {
                      "$ref": "#/components/schemas/source"
                    }
                  ]
                },
                "x-stripeBypassValidation": true
              },
              "delinquent": {
                "description": "Tracks the most recent state change on any invoice belonging to the customer. Paying an invoice or marking it uncollectible via the API will set this field to false. An automatic payment failure or passing the `invoice.due_date` will set this field to `true`.\n\nIf an invoice becomes uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't reset to `false`.\n\nIf you care whether the customer has paid their most recent subscription invoice, use `subscription.status` instead. Paying or marking uncollectible any customer invoice regardless of whether it is the latest invoice for a subscription will always set this field to `false`.",
                "nullable": true,
                "type": "boolean"
              },
              "description": {
                "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "discount": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ],
                "description": "Describes the current discount active on the customer, if there is one.",
                "nullable": true
              },
              "email": {
                "description": "The customer's email address.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "id": {
                "description": "Unique identifier for the object.",
                "maxLength": 5000,
                "type": "string"
              },
              "invoice_credit_balance": {
                "additionalProperties": {
                  "type": "integer"
                },
                "description": "The current multi-currency balances, if any, that's stored on the customer. If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency. If negative, the customer has an amount owed that's added to their next invoice denominated in that currency. These balances don't apply to unpaid invoices. They solely track amounts that Stripe hasn't successfully applied to any invoice. Stripe only applies a balance in a specific currency to an invoice after that invoice (which is in the same currency) finalizes.",
                "type": "object"
              },
              "invoice_prefix": {
                "description": "The prefix for the customer used to generate unique invoice numbers.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "invoice_settings": {
                "$ref": "#/components/schemas/invoice_setting_customer_setting"
              },
              "livemode": {
                "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
                "type": "boolean"
              },
              "metadata": {
                "additionalProperties": {
                  "maxLength": 500,
                  "type": "string"
                },
                "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
                "type": "object"
              },
              "name": {
                "description": "The customer's full name or business name.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "next_invoice_sequence": {
                "description": "The suffix of the customer's next invoice number (for example, 0001). When the account uses account level sequencing, this parameter is ignored in API requests and the field omitted in API responses.",
                "type": "integer"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value.",
                "enum": [
                  "customer"
                ],
                "type": "string"
              },
              "phone": {
                "description": "The customer's phone number.",
                "maxLength": 5000,
                "nullable": true,
                "type": "string"
              },
              "preferred_locales": {
                "description": "The customer's preferred locales (languages), ordered by preference.",
                "items": {
                  "maxLength": 5000,
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "shipping": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/shipping"
                  }
                ],
                "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
                "nullable": true
              },
              "sources": {
                "description": "The customer's payment sources, if any.",
                "properties": {
                  "data": {
                    "description": "Details about each object.",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/bank_account"
                        },
                        {
                          "$ref": "#/components/schemas/card"
                        },
                        {
                          "$ref": "#/components/schemas/source"
                        }
                      ],
                      "title": "Polymorphic",
                      "x-stripeBypassValidation": true
                    },
                    "type": "array"
                  },
                  "has_more": {
                    "description": "True if this list has another page of items after this one that can be fetched.",
                    "type": "boolean"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                    "enum": [
                      "list"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL where this list can be accessed.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "data",
                  "has_more",
                  "object",
                  "url"
                ],
                "title": "ApmsSourcesSourceList",
                "type": "object",
                "x-expandableFields": [
                  "data"
                ]
              },
              "subscriptions": {
                "description": "The customer's current subscriptions, if any.",
                "properties": {
                  "data": {
                    "description": "Details about each object.",
                    "items": {
                      "$ref": "#/components/schemas/subscription"
                    },
                    "type": "array"
                  },
                  "has_more": {
                    "description": "True if this list has another page of items after this one that can be fetched.",
                    "type": "boolean"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                    "enum": [
                      "list"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL where this list can be accessed.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "data",
                  "has_more",
                  "object",
                  "url"
                ],
                "title": "SubscriptionList",
                "type": "object",
                "x-expandableFields": [
                  "data"
                ]
              },
              "tax": {
                "$ref": "#/components/schemas/customer_tax"
              },
              "tax_exempt": {
                "description": "Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the following text: **\"Reverse charge\"**.",
                "enum": [
                  "exempt",
                  "none",
                  "reverse"
                ],
                "nullable": true,
                "type": "string"
              },
              "tax_ids": {
                "description": "The customer's tax IDs.",
                "properties": {
                  "data": {
                    "description": "Details about each object.",
                    "items": {
                      "$ref": "#/components/schemas/tax_id"
                    },
                    "type": "array"
                  },
                  "has_more": {
                    "description": "True if this list has another page of items after this one that can be fetched.",
                    "type": "boolean"
                  },
                  "object": {
                    "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                    "enum": [
                      "list"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL where this list can be accessed.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "data",
                  "has_more",
                  "object",
                  "url"
                ],
                "title": "TaxIDsList",
                "type": "object",
                "x-expandableFields": [
                  "data"
                ]
              },
              "test_clock": {
                "anyOf": [
                  {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/test_helpers.test_clock"
                  }
                ],
                "description": "ID of the test clock that this customer belongs to.",
                "nullable": true,
                "x-expansionResources": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/test_helpers.test_clock"
                    }
                  ]
                }
              }
            },
            "required": [
              "created",
              "id",
              "livemode",
              "object"
            ],
            "title": "Customer",
            "type": "object",
            "x-expandableFields": [
              "address",
              "cash_balance",
              "default_source",
              "discount",
              "invoice_settings",
              "shipping",
              "sources",
              "subscriptions",
              "tax",
              "tax_ids",
              "test_clock"
            ],
            "x-resourceId": "customer"
          }
        }
      },
      "description": "Successful response."
    }
  }
}