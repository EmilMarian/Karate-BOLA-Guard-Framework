{
  "method": "GET",
  "parameters": [
    {
      "description": "A valid user access token or your client credentials.",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.",
      "in": "query",
      "name": "country",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The desired language, consisting of a lowercase [ISO 639-1 language code](http://en.wikipedia.org/wiki/ISO_639-1) and an uppercase [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning \"Spanish (Mexico)\". Provide this parameter if you want the results returned in a particular language (where available). Note that, if `locale` is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English). The `locale` parameter, combined with the `country` parameter, may give odd results if not carefully matched. For example `country=SE&locale=de_DE` will return a list of categories relevant to Sweden but as German language strings.",
      "in": "query",
      "name": "locale",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A timestamp in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601): `yyyy-MM-ddTHH:mm:ss`. Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day. If not provided, the response defaults to the current UTC time. Example: \"2014-10-23T09:00:00\" for a user whose local time is 9AM. If there were no featured playlists (or there is no data) at the specified time, the response will revert to the current UTC time.",
      "in": "query",
      "name": "timestamp",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    },
    {
      "description": "The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items.",
      "in": "query",
      "name": "offset",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    }
  ],
  "path": "/browse/featured-playlists",
  "requestBody": {},
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "message": {
                "description": "",
                "type": "string"
              },
              "playlists": {
                "description": "",
                "externalDocs": {
                  "description": "Find more info on the official Spotify Web API Reference",
                  "url": "https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject"
                },
                "properties": {
                  "href": {
                    "description": "A link to the Web API endpoint returning the full result of the request",
                    "type": "string"
                  },
                  "items": {
                    "description": "The requested data.",
                    "items": {
                      "$ref": "#/components/schemas/SimplifiedPlaylistObject"
                    },
                    "type": "array"
                  },
                  "limit": {
                    "description": "The maximum number of items in the response (as set in the query or by default).",
                    "format": "int32",
                    "type": "integer"
                  },
                  "next": {
                    "description": "URL to the next page of items. ( `null` if none)",
                    "type": "string"
                  },
                  "offset": {
                    "description": "The offset of the items returned (as set in the query or by default)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "previous": {
                    "description": "URL to the previous page of items. ( `null` if none)",
                    "type": "string"
                  },
                  "total": {
                    "description": "The total number of items available to return.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "On success, the HTTP status code in the response header is `200` OK and the response body contains a `message` and a `playlists` object. The `playlists` object contains an array of simplified [playlist objects](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedplaylistobject) (wrapped in a [paging object](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)) in JSON format. On error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes) and the response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema).\n\nOnce you have retrieved the list of playlist objects, you can use [Get a Playlist](https://developer.spotify.com/web-api/get-playlist/) and [Get a Playlist's Tracks](https://developer.spotify.com/web-api/get-playlists-tracks/) to drill down further."
    }
  }
}