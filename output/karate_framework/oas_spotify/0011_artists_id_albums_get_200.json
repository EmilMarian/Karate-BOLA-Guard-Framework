{
  "method": "GET",
  "parameters": [
    {
      "description": "A valid user access token or your client credentials.",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the artist.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A comma-separated list of keywords that will be used to filter the response. If not supplied, all album types will be returned. Valid values are:  \n- `album`  \n- `single`  \n- `appears_on`  \n- `compilation`  \nFor example: `include_groups=album,single`.",
      "in": "query",
      "name": "include_groups",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Synonym for `country`. An [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or the string `from_token`.  \nSupply this parameter to limit the response to one particular geographical market. For example, for albums available in Sweden: `market=SE`.  \n*If not given, results will be returned for all markets and you are likely to get duplicate results per album, one for each market in which the album is available!*",
      "in": "query",
      "name": "market",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The number of album objects to return. Default: 20. Minimum: 1. Maximum: 50. For example: `limit=2`",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    },
    {
      "description": "The index of the first album to return. Default: 0 (i.e., the first album). Use with `limit` to get the next set of albums.",
      "in": "query",
      "name": "offset",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    }
  ],
  "path": "/artists/{id}/albums",
  "requestBody": {},
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "externalDocs": {
              "description": "Find more info on the official Spotify Web API Reference",
              "url": "https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject"
            },
            "properties": {
              "href": {
                "description": "A link to the Web API endpoint returning the full result of the request",
                "type": "string"
              },
              "items": {
                "description": "The requested data.",
                "items": {
                  "externalDocs": {
                    "description": "Find more info on the official Spotify Web API Reference",
                    "url": "https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedalbumobject"
                  },
                  "properties": {
                    "album_group": {
                      "description": "The field is present when getting an artist's albums. Compare to album_type this field represents relationship between the artist and the album.",
                      "type": "string"
                    },
                    "album_type": {
                      "description": "The type of the album.",
                      "type": "string"
                    },
                    "artists": {
                      "description": "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist.",
                      "items": {
                        "$ref": "#/components/schemas/SimplifiedArtistObject"
                      },
                      "type": "array"
                    },
                    "available_markets": {
                      "description": "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Note that an album is considered available in a market when at least 1 of its tracks is available in that market.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "external_urls": {
                      "$ref": "#/components/schemas/ExternalUrlObject"
                    },
                    "href": {
                      "description": "A link to the Web API endpoint providing full details of the album.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the album.",
                      "type": "string"
                    },
                    "images": {
                      "description": "The cover art for the album in various sizes, widest first.",
                      "items": {
                        "$ref": "#/components/schemas/ImageObject"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the album. In case of an album takedown, the value may be an empty string.",
                      "type": "string"
                    },
                    "release_date": {
                      "description": "The date the album was first released.",
                      "type": "string"
                    },
                    "release_date_precision": {
                      "description": "The precision with which `release_date` value is known.",
                      "type": "string"
                    },
                    "restrictions": {
                      "$ref": "#/components/schemas/AlbumRestrictionObject"
                    },
                    "total_tracks": {
                      "description": "The number of tracks in the album.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": {
                      "description": "The object type.",
                      "type": "string"
                    },
                    "uri": {
                      "description": "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the album.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "limit": {
                "description": "The maximum number of items in the response (as set in the query or by default).",
                "format": "int32",
                "type": "integer"
              },
              "next": {
                "description": "URL to the next page of items. ( `null` if none)",
                "type": "string"
              },
              "offset": {
                "description": "The offset of the items returned (as set in the query or by default)",
                "format": "int32",
                "type": "integer"
              },
              "previous": {
                "description": "URL to the previous page of items. ( `null` if none)",
                "type": "string"
              },
              "total": {
                "description": "The total number of items available to return.",
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "On success, the HTTP status code in the response header is `200` OK and the response body contains an array of simplified [album objects](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedalbumobject) (wrapped in a [paging object](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)) in JSON format. On error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes) and the response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema)."
    }
  }
}