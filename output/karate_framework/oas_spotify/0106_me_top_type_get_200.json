{
  "method": "GET",
  "parameters": [
    {
      "description": "A valid access token from the Spotify Accounts service: see the [Web API Authorization Guide](https://developer.spotify.com/documentation/general/guides/authorization-guide/) for details. The access token must have been issued on behalf of the current user.  \nGetting details of a user's top artists and tracks requires authorization of the `user-top-read` scope. See [Using Scopes](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes).",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The type of entity to return. Valid values: `artists` or `tracks`",
      "in": "path",
      "name": "type",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Over what time frame the affinities are computed. Valid values: `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), `short_term` (approximately last 4 weeks). Default: `medium_term`",
      "in": "query",
      "name": "time_range",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The number of entities to return. Default: 20. Minimum: 1. Maximum: 50. For example: `limit=2`",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    },
    {
      "description": "The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.",
      "in": "query",
      "name": "offset",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    }
  ],
  "path": "/me/top/{type}",
  "requestBody": {},
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "externalDocs": {
              "description": "Find more info on the official Spotify Web API Reference",
              "url": "https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject"
            },
            "properties": {
              "href": {
                "description": "A link to the Web API endpoint returning the full result of the request",
                "type": "string"
              },
              "items": {
                "description": "The requested data.",
                "items": {
                  "oneOf": [
                    {
                      "externalDocs": {
                        "description": "Find more info on the official Spotify Web API Reference",
                        "url": "https://developer.spotify.com/documentation/web-api/reference/#object-artistobject"
                      },
                      "properties": {
                        "external_urls": {
                          "$ref": "#/components/schemas/ExternalUrlObject"
                        },
                        "followers": {
                          "$ref": "#/components/schemas/FollowersObject"
                        },
                        "genres": {
                          "description": "A list of the genres the artist is associated with. If not yet classified, the array is empty.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "href": {
                          "description": "A link to the Web API endpoint providing full details of the artist.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the artist.",
                          "type": "string"
                        },
                        "images": {
                          "description": "Images of the artist in various sizes, widest first.",
                          "items": {
                            "$ref": "#/components/schemas/ImageObject"
                          },
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the artist.",
                          "type": "string"
                        },
                        "popularity": {
                          "description": "The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "description": "The object type.",
                          "type": "string"
                        },
                        "uri": {
                          "description": "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the artist.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "externalDocs": {
                        "description": "Find more info on the official Spotify Web API Reference",
                        "url": "https://developer.spotify.com/documentation/web-api/reference/#object-trackobject"
                      },
                      "properties": {
                        "album": {
                          "$ref": "#/components/schemas/SimplifiedAlbumObject"
                        },
                        "artists": {
                          "description": "The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist.",
                          "items": {
                            "$ref": "#/components/schemas/ArtistObject"
                          },
                          "type": "array"
                        },
                        "available_markets": {
                          "description": "A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "disc_number": {
                          "description": "The disc number (usually `1` unless the album consists of more than one disc).",
                          "format": "int32",
                          "type": "integer"
                        },
                        "duration_ms": {
                          "description": "The track length in milliseconds.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "explicit": {
                          "description": "Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown).",
                          "type": "boolean"
                        },
                        "external_ids": {
                          "$ref": "#/components/schemas/ExternalIdObject"
                        },
                        "external_urls": {
                          "$ref": "#/components/schemas/ExternalUrlObject"
                        },
                        "href": {
                          "description": "A link to the Web API endpoint providing full details of the track.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track.",
                          "type": "string"
                        },
                        "is_local": {
                          "description": "Whether or not the track is from a local file.",
                          "type": "boolean"
                        },
                        "is_playable": {
                          "description": "Part of the response when [Track Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/) is applied. If `true` , the track is playable in the given market. Otherwise `false`.",
                          "type": "boolean"
                        },
                        "linked_from": {
                          "$ref": "#/components/schemas/LinkedTrackObject"
                        },
                        "name": {
                          "description": "The name of the track.",
                          "type": "string"
                        },
                        "popularity": {
                          "description": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.  \nThe popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.  \nGenerally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. Note that the popularity value may lag actual popularity by a few days: the value is not updated in real time.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "preview_url": {
                          "description": "A link to a 30 second preview (MP3 format) of the track. Can be `null`",
                          "type": "string"
                        },
                        "restrictions": {
                          "$ref": "#/components/schemas/TrackRestrictionObject"
                        },
                        "track_number": {
                          "description": "The number of the track. If an album has several discs, the track number is the number on the specified disc.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "description": "The object type: \"track\".",
                          "type": "string"
                        },
                        "uri": {
                          "description": "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              },
              "limit": {
                "description": "The maximum number of items in the response (as set in the query or by default).",
                "format": "int32",
                "type": "integer"
              },
              "next": {
                "description": "URL to the next page of items. ( `null` if none)",
                "type": "string"
              },
              "offset": {
                "description": "The offset of the items returned (as set in the query or by default)",
                "format": "int32",
                "type": "integer"
              },
              "previous": {
                "description": "URL to the previous page of items. ( `null` if none)",
                "type": "string"
              },
              "total": {
                "description": "The total number of items available to return.",
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "On success, the HTTP status code in the response header is `200 OK` and the response body contains a [paging object](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject) of [Artists](https://developer.spotify.com/documentation/web-api/reference/#object-artistobject) or [Tracks](https://developer.spotify.com/documentation/web-api/reference/#object-trackobject). On error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes) and the response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema)."
    }
  }
}