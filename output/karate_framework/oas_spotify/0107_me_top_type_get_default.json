{
  "method": "GET",
  "parameters": [
    {
      "description": "A valid access token from the Spotify Accounts service: see the [Web API Authorization Guide](https://developer.spotify.com/documentation/general/guides/authorization-guide/) for details. The access token must have been issued on behalf of the current user.  \nGetting details of a user's top artists and tracks requires authorization of the `user-top-read` scope. See [Using Scopes](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes).",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The type of entity to return. Valid values: `artists` or `tracks`",
      "in": "path",
      "name": "type",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Over what time frame the affinities are computed. Valid values: `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), `short_term` (approximately last 4 weeks). Default: `medium_term`",
      "in": "query",
      "name": "time_range",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The number of entities to return. Default: 20. Minimum: 1. Maximum: 50. For example: `limit=2`",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    },
    {
      "description": "The index of the first entity to return. Default: 0 (i.e., the first track). Use with limit to get the next set of entities.",
      "in": "query",
      "name": "offset",
      "required": false,
      "schema": {
        "format": "int32",
        "type": "integer"
      }
    }
  ],
  "path": "/me/top/{type}",
  "requestBody": {},
  "responses": {
    "default": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorResponseObject"
          }
        }
      },
      "description": "Unexpected error"
    }
  }
}