{
  "method": "DELETE",
  "parameters": [
    {
      "description": "A valid access token from the Spotify Accounts service: see the [Web API Authorization Guide](https://developer.spotify.com/documentation/general/guides/authorization-guide/) for details. The access token must have been issued on behalf of the user. The `user-library-modify` scope must have been authorized by the user.",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A comma-separated list of Spotify IDs for the shows to be deleted from the user's library.",
      "in": "query",
      "name": "ids",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). If a country code is specified, only shows that are available in that market will be removed.  \nIf a valid user access token is specified in the request header, the country associated with the user account will take priority over this parameter.  \n*Note: If neither market or user country are provided, the content is considered unavailable for the client.*   \nUsers can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/).",
      "in": "query",
      "name": "market",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "path": "/me/shows",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "ids": {
              "description": "A JSON array of the [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids).  \nA maximum of 50 items can be specified in one request. *Note: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored.*",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      }
    },
    "required": false
  },
  "responses": {
    "default": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorResponseObject"
          }
        }
      },
      "description": "Unexpected error"
    }
  }
}