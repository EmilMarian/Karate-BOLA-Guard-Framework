{
  "method": "PUT",
  "parameters": [
    {
      "description": "A valid access token from the Spotify Accounts service: see the [Web API Authorization Guide](https://developer.spotify.com/documentation/general/guides/authorization-guide/) for details. The access token must have been issued on behalf of the user.   \nReordering or replacing items in the current user's public playlists requires authorization of the `playlist-modify-public` scope; reordering or replacing items in the current user's private playlist (including collaborative playlists) requires the `playlist-modify-private` scope. See [Using Scopes](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes).",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "*Required if URIs are passed in the request body, otherwise ignored.* The content type of the request body: `application/json`",
      "in": "header",
      "name": "Content-Type",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the playlist.",
      "in": "path",
      "name": "playlist_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A comma-separated list of [Spotify URIs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) to set, can be track or episode URIs. For example: `uris=spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:track:1301WleyT98MSxVHPZCA6M,spotify:episode:512ojhOuo1ktJprKbVcKyQ`  \nA maximum of 100 items can be set in one request.",
      "in": "query",
      "name": "uris",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "path": "/playlists/{playlist_id}/tracks",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "insert_before": {
              "description": "The position where the items should be inserted.  \nTo reorder the items to the end of the playlist, simply set *insert_before* to the position after the last item.  \nExamples:  \nTo reorder the first item to the last position in a playlist with 10 items, set *range_start* to 0, and *insert_before* to 10.  \nTo reorder the last item in a playlist with 10 items to the start of the playlist, set *range_start* to 9, and *insert_before* to 0.",
              "format": "int32",
              "type": "integer"
            },
            "range_length": {
              "description": "The amount of items to be reordered. Defaults to 1 if not set.  \nThe range of items to be reordered begins from the *range_start* position, and includes the *range_length* subsequent items.  \nExample:  \nTo move the items at index 9-10 to the start of the playlist, *range_start* is set to 9, and *range_length* is set to 2.",
              "format": "int32",
              "type": "integer"
            },
            "range_start": {
              "description": "The position of the first item to be reordered.",
              "format": "int32",
              "type": "integer"
            },
            "snapshot_id": {
              "description": "The playlist's snapshot ID against which you want to make the changes.",
              "type": "string"
            },
            "uris": {
              "description": "A comma-separated list of [Spotify URIs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) to set, can be track or episode URIs. For example: `uris=spotify:track:4iV5W9uYEdYUVa79Axb7Rh,spotify:track:1301WleyT98MSxVHPZCA6M,spotify:episode:512ojhOuo1ktJprKbVcKyQ`  \nA maximum of 100 items can be set in one request.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      }
    },
    "required": false
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "snapshot_id": {
                "description": "The snapshot_id can be used to identify your playlist version in future requests.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "On a successful **reorder** operation, the response body contains a `snapshot_id` in JSON format\nand the HTTP status code in the response header is `200` OK. The `snapshot_id`\ncan be used to identify your playlist version in future requests.\n\nOn a successful **replace** operation, the HTTP status code in the response header is `201`\nCreated.\n\nOn error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes),\nthe response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema),\nand the existing playlist is unmodified.\nTrying to set an item when you do not have the user's authorization returns error `403` Forbidden."
    }
  }
}