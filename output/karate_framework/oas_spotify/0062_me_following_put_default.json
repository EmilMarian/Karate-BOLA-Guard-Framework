{
  "method": "PUT",
  "parameters": [
    {
      "description": "A valid user access token or your client credentials. Requires the `user-follow-modify` scope.",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "*Required if IDs are passed in the request body, otherwise ignored* . The content type of the request body: `application/json`",
      "in": "header",
      "name": "Content-Type",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The ID type.",
      "in": "query",
      "name": "type",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A comma-separated list of the artist or the user [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids). A maximum of 50 IDs can be sent in one request.",
      "in": "query",
      "name": "ids",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  ],
  "path": "/me/following",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "ids": {
              "description": "A JSON array of the artist or user [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids). For example: `{ids:[\"74ASZWbe4lXaubB36ztrGX\", \"08td7MxkoHQkXnWAYD8d6Q\"]}`. A maximum of 50 IDs can be sent in one request. *Note: if the `ids` parameter is present in the query string, any IDs listed here in the body will be ignored.*",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "ids"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "default": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/ErrorResponseObject"
          }
        }
      },
      "description": "Unexpected error"
    }
  }
}