2025-01-25 22:06:46,302 - __main__ - INFO - Skipping fragment creation: False
2025-01-25 22:06:46,372 - __main__ - DEBUG - Starting fragment retrieval process.
2025-01-25 22:06:46,638 - __main__ - DEBUG - Retrieved fragments: [{'content': '{"method": "POST", "parameters": [], "path": "/customers/subscribers", "requestBody": {"content": {"application/json": {"schema": {"properties": {"date_created": {"description": "The date on which the subscriber was created.\\n", "format": "data-time", "type": "string"}, "date_modified": {"description": "The date on which the subscriber was modified.\\n", "format": "data-time", "type": "string"}, "email": {"description": "The email of the subscriber. Must be unique.\\n", "type": "string"}, "first_name": {"description": "The first name of the subscriber.\\n", "type": "string"}, "id": {"description": "The unique numeric ID of the subscriber; increments sequentially.\\n", "type": "integer"}, "last_name": {"description": "The last name of the subscriber.\\n", "type": "string"}, "order_id": {"description": "The ID of the source order, if source was an order.\\n", "type": "integer"}, "source": {"description": "The source of the subscriber. Values are: `storefront`, `order`, or `custom`.\\n", "type": "string"}}, "type": "object"}}}, "description": "`Subscriber` object\\n", "required": true}, "responses": {"422": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/BaseError"}, {"properties": {"errors": {"$ref": "#/components/schemas/DetailedErrors"}}, "type": "object"}]}}}, "description": "The `Subscriber` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\\n"}}}', 'metadata': {'filename': '0157_customers_subscribers_post_422.json'}}, {'content': '{"method": "POST", "parameters": [], "path": "/customers/subscribers", "requestBody": {"content": {"application/json": {"schema": {"properties": {"date_created": {"description": "The date on which the subscriber was created.\\n", "format": "data-time", "type": "string"}, "date_modified": {"description": "The date on which the subscriber was modified.\\n", "format": "data-time", "type": "string"}, "email": {"description": "The email of the subscriber. Must be unique.\\n", "type": "string"}, "first_name": {"description": "The first name of the subscriber.\\n", "type": "string"}, "id": {"description": "The unique numeric ID of the subscriber; increments sequentially.\\n", "type": "integer"}, "last_name": {"description": "The last name of the subscriber.\\n", "type": "string"}, "order_id": {"description": "The ID of the source order, if source was an order.\\n", "type": "integer"}, "source": {"description": "The source of the subscriber. Values are: `storefront`, `order`, or `custom`.\\n", "type": "string"}}, "type": "object"}}}, "description": "`Subscriber` object\\n", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"description": "Response payload for the Bigcommerce API.\\n", "properties": {"data": {"$ref": "#/components/schemas/Subscriber"}, "meta": {"$ref": "#/components/schemas/Meta"}}, "type": "object"}}}, "description": "A `Subscriber` object.\\n"}}}', 'metadata': {'filename': '0155_customers_subscribers_post_200.json'}}, {'content': '{"method": "POST", "parameters": [], "path": "/customers/subscribers", "requestBody": {"content": {"application/json": {"schema": {"properties": {"date_created": {"description": "The date on which the subscriber was created.\\n", "format": "data-time", "type": "string"}, "date_modified": {"description": "The date on which the subscriber was modified.\\n", "format": "data-time", "type": "string"}, "email": {"description": "The email of the subscriber. Must be unique.\\n", "type": "string"}, "first_name": {"description": "The first name of the subscriber.\\n", "type": "string"}, "id": {"description": "The unique numeric ID of the subscriber; increments sequentially.\\n", "type": "integer"}, "last_name": {"description": "The last name of the subscriber.\\n", "type": "string"}, "order_id": {"description": "The ID of the source order, if source was an order.\\n", "type": "integer"}, "source": {"description": "The source of the subscriber. Values are: `storefront`, `order`, or `custom`.\\n", "type": "string"}}, "type": "object"}}}, "description": "`Subscriber` object\\n", "required": true}, "responses": {"409": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/BaseError"}, {"properties": {"errors": {"$ref": "#/components/schemas/DetailedErrors"}}, "type": "object"}]}}}, "description": "The `Subscriber` was in conflict with another subscriber. This is the result of duplicate unique values, such as `email`.\\n"}}}', 'metadata': {'filename': '0156_customers_subscribers_post_409.json'}}], form collection oas_bigecommerce_fragments
2025-01-25 22:06:46,638 - karate_llm_test_gen - INFO - Generating Karate test for prompt: 
Given the following API endpoint information:

  ...
2025-01-25 22:06:46,639 - karate_llm_test_gen - INFO - Getting relevant examples for: 
Given the following API endpoint information:

  ...
2025-01-25 22:06:47,040 - karate_llm_test_gen - INFO - Found 3 relevant examples.
2025-01-25 22:06:47,040 - karate_llm_test_gen - INFO - Sending request to http://192.168.1.108:4893/v1/chat/completions
2025-01-25 22:10:31,731 - karate_llm_test_gen - INFO - Response status code: 200
2025-01-25 22:10:31,733 - karate_llm_test_gen - INFO - Generated test case: Here is a sample Karate DSL test script to check for potential Broken Authentication/Authorization v...
2025-01-25 22:10:31,734 - __main__ - INFO - Generated Karate test for /customers/subscribers POST at output/karate_feature_files/ID_001_krtestoas_customers_subscribers_POST.feature
2025-01-25 22:10:31,734 - karate_compatibility_verifier - INFO - Original content:
2025-01-25 22:10:31,734 - karate_compatibility_verifier - INFO - Here is a sample Karate DSL test script to check for potential Broken Authentication/Authorization vulnerabilities:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
This scenario tests whether the `/customers/subscribers` endpoint requires authentication by attempting to create a subscriber without providing any authentication credentials. If the request is successful, it indicates that the endpoint does not require authentication, which could be a security vulnerability.
2025-01-25 22:13:16,205 - karate_compatibility_verifier - INFO - 
Content after compatibility check:
2025-01-25 22:13:16,206 - karate_compatibility_verifier - INFO - Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:14:12,207 - karate_compatibility_verifier - INFO - 
Final verified content:
2025-01-25 22:14:12,207 - karate_compatibility_verifier - INFO - Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:14:12,207 - karate_compatibility_verifier - INFO - 
Verified content written to: output/karate_feature_files/ID_001_krtestoas_customers_subscribers_POST_verified.feature
2025-01-25 22:14:12,208 - __main__ - WARNING - Compatibility issues found in output/karate_feature_files/ID_001_krtestoas_customers_subscribers_POST.feature: Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:14:12,208 - karate_llm_test_gen - INFO - Generating Karate test for prompt: 
Given the following API endpoint information:

  ...
2025-01-25 22:14:12,209 - karate_llm_test_gen - INFO - Getting relevant examples for: 
Given the following API endpoint information:

  ...
2025-01-25 22:14:12,252 - karate_llm_test_gen - INFO - Found 3 relevant examples.
2025-01-25 22:14:12,252 - karate_llm_test_gen - INFO - Sending request to http://192.168.1.108:4893/v1/chat/completions
2025-01-25 22:17:55,418 - karate_llm_test_gen - INFO - Response status code: 200
2025-01-25 22:17:55,419 - karate_llm_test_gen - INFO - Generated test case: Here is a sample Karate DSL test script to check for potential Broken Authentication/Authorization v...
2025-01-25 22:17:55,420 - __main__ - INFO - Generated Karate test for /customers/subscribers POST at output/karate_feature_files/ID_002_krtestoas_customers_subscribers_POST.feature
2025-01-25 22:17:55,421 - karate_compatibility_verifier - INFO - Original content:
2025-01-25 22:17:55,421 - karate_compatibility_verifier - INFO - Here is a sample Karate DSL test script to check for potential Broken Authentication/Authorization vulnerabilities:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
This scenario tests whether the `/customers/subscribers` endpoint requires authentication by attempting to create a subscriber without providing any authentication credentials. If the request is successful, it indicates that the endpoint does not require authentication, which could be a security vulnerability.
2025-01-25 22:20:38,960 - karate_compatibility_verifier - INFO - 
Content after compatibility check:
2025-01-25 22:20:38,960 - karate_compatibility_verifier - INFO - Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:21:34,662 - karate_compatibility_verifier - INFO - 
Final verified content:
2025-01-25 22:21:34,662 - karate_compatibility_verifier - INFO - Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:21:34,663 - karate_compatibility_verifier - INFO - 
Verified content written to: output/karate_feature_files/ID_002_krtestoas_customers_subscribers_POST_verified.feature
2025-01-25 22:21:34,663 - __main__ - WARNING - Compatibility issues found in output/karate_feature_files/ID_002_krtestoas_customers_subscribers_POST.feature: Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:21:34,663 - karate_llm_test_gen - INFO - Generating Karate test for prompt: 
Given the following API endpoint information:

  ...
2025-01-25 22:21:34,664 - karate_llm_test_gen - INFO - Getting relevant examples for: 
Given the following API endpoint information:

  ...
2025-01-25 22:21:34,705 - karate_llm_test_gen - INFO - Found 3 relevant examples.
2025-01-25 22:21:34,706 - karate_llm_test_gen - INFO - Sending request to http://192.168.1.108:4893/v1/chat/completions
2025-01-25 22:25:17,349 - karate_llm_test_gen - INFO - Response status code: 200
2025-01-25 22:25:17,350 - karate_llm_test_gen - INFO - Generated test case: Here is a sample Karate DSL test script to check for potential Broken Authentication/Authorization v...
2025-01-25 22:25:17,351 - __main__ - INFO - Generated Karate test for /customers/subscribers POST at output/karate_feature_files/ID_003_krtestoas_customers_subscribers_POST.feature
2025-01-25 22:25:17,351 - karate_compatibility_verifier - INFO - Original content:
2025-01-25 22:25:17,351 - karate_compatibility_verifier - INFO - Here is a sample Karate DSL test script to check for potential Broken Authentication/Authorization vulnerabilities:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
This scenario tests whether the `/customers/subscribers` endpoint requires authentication by attempting to create a subscriber without providing any authentication credentials. If the request is successful, it indicates that the endpoint does not require authentication, which could be a security vulnerability.
2025-01-25 22:28:01,218 - karate_compatibility_verifier - INFO - 
Content after compatibility check:
2025-01-25 22:28:01,218 - karate_compatibility_verifier - INFO - Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:28:56,892 - karate_compatibility_verifier - INFO - 
Final verified content:
2025-01-25 22:28:56,892 - karate_compatibility_verifier - INFO - Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:28:56,893 - karate_compatibility_verifier - INFO - 
Verified content written to: output/karate_feature_files/ID_003_krtestoas_customers_subscribers_POST_verified.feature
2025-01-25 22:28:56,893 - __main__ - WARNING - Compatibility issues found in output/karate_feature_files/ID_003_krtestoas_customers_subscribers_POST.feature: Here is the corrected Karate DSL test script:
```kotlin
Feature: Test API for Customers Subscribers Endpoint
  Scenario: Attempt to create subscriber without authentication
    Given url http://oas_bigecommerce.api/customers/subscribers
    And request { "name": "John Doe", "email": "johndoe@example.com" }
    When method post
    Then status 401
    And match response contains "Unauthorized"
```
2025-01-25 22:28:56,893 - __main__ - INFO - Moving generated Karate feature files...
2025-01-25 22:28:56,912 - __main__ - INFO - Creating the Karate Test Framework with generated feature files
2025-01-25 22:29:01,005 - __main__ - INFO - Skipping karate test run.
