2025-02-02 14:22:17,360 - __main__ - INFO - Skipping fragment creation: False
2025-02-02 14:22:17,422 - __main__ - DEBUG - Starting fragment retrieval process.
2025-02-02 14:22:17,656 - __main__ - DEBUG - Retrieved fragments: [{'content': '{"method": "GET", "parameters": [{"description": "Type of merchant location. Options are \\"acceptance.paypass\\" \\"topup.repower\\" \\"products.prepaidtravelcard\\" \\"offers.easysavings\\" and \\"features.cashback\\". Cash Back is currently only available in the US.", "in": "query", "name": "Details", "required": true, "type": "string", "x-example": "acceptance.paypass", "x-explorer": true}, {"description": "Zero-based offset where the response will start. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.", "in": "query", "name": "PageOffset", "required": true, "type": "integer", "x-example": "0", "x-explorer": true}, {"description": "Maximum number of items to retrieve within the current \\"page\\" of results.", "in": "query", "name": "PageLength", "required": true, "type": "integer", "x-example": "5", "x-explorer": true}, {"description": "Category of the merchant location. See the Categories (Merchant) resource for a list of valid categories. This parameter is only valid for merchant queries with Details = \\"acceptance.paypass\\" or \\"features.cashback\\".", "in": "query", "name": "Category", "required": false, "type": "string", "x-example": "features.cashback", "x-explorer": false}, {"description": "Line 1 of the street address for the merchant location.  Usually includes the street number and name. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.", "in": "query", "name": "AddressLine1", "required": false, "type": "string", "x-example": "42 Elm Street", "x-explorer": false}, {"description": "Line 2 of the street address usually an apartment number or suite number. This parameter is used rarely and is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.", "in": "query", "name": "AddressLine2", "required": false, "type": "string", "x-example": "Suite 101", "x-explorer": false}, {"description": "Name of the city for a merchant location.  This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.", "in": "query", "name": "City", "required": false, "type": "string", "x-example": "New York", "x-explorer": false}, {"description": "State or province for a merchant location (only supported for US and Canada locations).  This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.", "in": "query", "name": "CountrySubdivision", "required": false, "type": "string", "x-example": "NY", "x-explorer": false}, {"description": "Zip code or postal code for a merchant location.  This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.", "in": "query", "name": "PostalCode", "required": false, "type": "string", "x-example": "11001", "x-explorer": false}, {"description": "Any three digit country code for an ATM location.  Valid values are Three digit alpha country code as defined in ISO 3166-1.  This parameter is ignored if latitude and longitude are provided. This parameter is required if any other address information is provided including AddressLine1 AddressLine2 City PostalCode or CountrySubdivision. By default we supply ATM location data for United States ATMs for up to twenty-five records per request.", "in": "query", "name": "Country", "required": false, "type": "string", "x-example": "USA", "x-explorer": false}, {"description": "Latitude of a merchant location.  If latitude is provided longitude must also be provided.", "format": "double", "in": "query", "name": "Latitude", "required": false, "type": "number", "x-example": "38.53463", "x-explorer": true}, {"description": "Longitude of a merchant location.  If longitude is provided latitude must also be provided.", "format": "double", "in": "query", "name": "Longitude", "required": false, "type": "number", "x-example": "-90.286781", "x-explorer": true}, {"description": "Indicates the unit for the radius as well as the units of the distance of each location from the basepoint in the response.", "in": "query", "name": "DistanceUnit", "required": false, "type": "string", "x-example": "MILE", "x-explorer": false}, {"description": "This is the radius from the search point in the distance unit you set.  For example if you want to search for locations within 50 miles of a certain point you would set DistanceUnit=mile and Radius=50.  This parameter is ignored in non-geocoded countries.", "in": "query", "name": "Radius", "required": false, "type": "integer", "x-example": "25", "x-explorer": false}, {"description": "Unique identifier that represents the merhcant sponsor of an offer. Any valid merchant ID.", "in": "query", "name": "OfferMerchantID", "required": false, "type": "string", "x-example": "34760", "x-explorer": false}], "path": "/merchants/v1/merchant", "requestBody": {}, "responses": {"200": {"description": "An array of Merchant locations", "schema": {"properties": {"Merchants": {"$ref": "#/definitions/Merchants"}}}}}}', 'metadata': {'filename': '0013_merchants_v1_merchant_get_200.json'}}, {'content': '{"method": "GET", "parameters": [{"description": "Type of merchant location. Options are \\"acceptance.paypass\\" \\"topup.repower\\" \\"products.prepaidtravelcard\\" \\"offers.easysavings\\" and \\"features.cashback\\". Cash Back is currently only available in the US.", "in": "query", "name": "Details", "required": true, "type": "string", "x-example": "acceptance.paypass", "x-explorer": true}, {"description": "Zero-based offset where the response will start. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.", "in": "query", "name": "PageOffset", "required": true, "type": "integer", "x-example": "0", "x-explorer": true}, {"description": "Maximum number of items to retrieve within the current \\"page\\" of results.", "in": "query", "name": "PageLength", "required": true, "type": "integer", "x-example": "5", "x-explorer": true}, {"description": "Category of the merchant location. See the Categories (Merchant) resource for a list of valid categories. This parameter is only valid for merchant queries with Details = \\"acceptance.paypass\\" or \\"features.cashback\\".", "in": "query", "name": "Category", "required": false, "type": "string", "x-example": "features.cashback", "x-explorer": false}, {"description": "Line 1 of the street address for the merchant location.  Usually includes the street number and name. This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.", "in": "query", "name": "AddressLine1", "required": false, "type": "string", "x-example": "42 Elm Street", "x-explorer": false}, {"description": "Line 2 of the street address usually an apartment number or suite number. This parameter is used rarely and is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter and either City parameter or PostalCode parameter.", "in": "query", "name": "AddressLine2", "required": false, "type": "string", "x-example": "Suite 101", "x-explorer": false}, {"description": "Name of the city for a merchant location.  This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.", "in": "query", "name": "City", "required": false, "type": "string", "x-example": "New York", "x-explorer": false}, {"description": "State or province for a merchant location (only supported for US and Canada locations).  This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.", "in": "query", "name": "CountrySubdivision", "required": false, "type": "string", "x-example": "NY", "x-explorer": false}, {"description": "Zip code or postal code for a merchant location.  This parameter is ignored if latitude and longitude are provided. If you provide this parameter you must also provide the Country parameter.", "in": "query", "name": "PostalCode", "required": false, "type": "string", "x-example": "11001", "x-explorer": false}, {"description": "Any three digit country code for an ATM location.  Valid values are Three digit alpha country code as defined in ISO 3166-1.  This parameter is ignored if latitude and longitude are provided. This parameter is required if any other address information is provided including AddressLine1 AddressLine2 City PostalCode or CountrySubdivision. By default we supply ATM location data for United States ATMs for up to twenty-five records per request.", "in": "query", "name": "Country", "required": false, "type": "string", "x-example": "USA", "x-explorer": false}, {"description": "Latitude of a merchant location.  If latitude is provided longitude must also be provided.", "format": "double", "in": "query", "name": "Latitude", "required": false, "type": "number", "x-example": "38.53463", "x-explorer": true}, {"description": "Longitude of a merchant location.  If longitude is provided latitude must also be provided.", "format": "double", "in": "query", "name": "Longitude", "required": false, "type": "number", "x-example": "-90.286781", "x-explorer": true}, {"description": "Indicates the unit for the radius as well as the units of the distance of each location from the basepoint in the response.", "in": "query", "name": "DistanceUnit", "required": false, "type": "string", "x-example": "MILE", "x-explorer": false}, {"description": "This is the radius from the search point in the distance unit you set.  For example if you want to search for locations within 50 miles of a certain point you would set DistanceUnit=mile and Radius=50.  This parameter is ignored in non-geocoded countries.", "in": "query", "name": "Radius", "required": false, "type": "integer", "x-example": "25", "x-explorer": false}, {"description": "Unique identifier that represents the merhcant sponsor of an offer. Any valid merchant ID.", "in": "query", "name": "OfferMerchantID", "required": false, "type": "string", "x-example": "34760", "x-explorer": false}], "path": "/merchants/v1/merchant", "requestBody": {}, "responses": {"default": {"description": "Unexpected error", "schema": {"properties": {"Errors": {"$ref": "#/definitions/Errors"}}}}}}', 'metadata': {'filename': '0014_merchants_v1_merchant_get_default.json'}}, {'content': '{"method": "GET", "parameters": [{"description": "This is the type of merchant location. Options  \\"acceptance.paypass\\" \\"topup.repower\\"  \\"products.prepaidtravelcard\\"  and \\"offers.easysavings\\"", "in": "query", "name": "details", "required": true, "type": "string", "x-example": "topup.repower", "x-explorer": true}, {"description": "Any three digit country code as defined in ISO 3166-1. For example \\"USA or \\"CAN\\"", "in": "query", "name": "country", "required": true, "type": "string", "x-example": "USA", "x-explorer": true}], "path": "/merchants/v1/countrysubdivision", "requestBody": {}, "responses": {"200": {"description": "A list of all the CountrySubdivisions", "schema": {"properties": {"CountrySubdivisions": {"$ref": "#/definitions/CountrySubdivisions"}}}}}}', 'metadata': {'filename': '0011_merchants_v1_countrysubdivision_get_200.json'}}], form collection oas_london_trafffic_fragments
2025-02-02 14:22:17,656 - karate_llm_test_gen - INFO - Generating Karate test for prompt: 
Given the following API endpoint information:

  ...
2025-02-02 14:22:17,657 - karate_llm_test_gen - INFO - Getting relevant examples for: 
Given the following API endpoint information:

  ...
2025-02-02 14:22:18,059 - karate_llm_test_gen - INFO - Found 3 relevant examples.
2025-02-02 14:22:18,061 - karate_llm_test_gen - INFO - Sending request to http://192.168.1.108:4893/v1/chat/completions
2025-02-02 14:22:25,350 - karate_llm_test_gen - INFO - Response status code: 200
2025-02-02 14:22:25,351 - karate_llm_test_gen - INFO - Generated test case:  Here is a Karate DSL test script to check for potential Broken Authentication/Authorization vulnera...
2025-02-02 14:22:25,351 - __main__ - INFO - Generated Karate test for /merchants/v1/merchant GET at output/karate_feature_files/ID_001_krtestoas_merchants_v1_merchant_GET.feature
2025-02-02 14:22:25,352 - karate_compatibility_verifier - INFO - Original content:
2025-02-02 14:22:25,352 - karate_compatibility_verifier - INFO - Here is a Karate DSL test script to check for potential Broken Authentication/Authorization vulnerabilities on the API endpoint `http://oas_london_trafffic.api/merchants/v1/merchant`:
```kotlin
Feature: Test for Broken Authentication/Authorization Vulnerabilities
  Scenario: Attempt to access merchant without authentication or authorization
    Given url http://oas_london_trafffic.api/merchants/v1/merchant
    When method get
    Then status code is 403 and response contains "Forbidden"
```
2025-02-02 14:22:30,366 - karate_compatibility_verifier - INFO - 
Content after compatibility check:
2025-02-02 14:22:30,366 - karate_compatibility_verifier - INFO -  ```kotlin
Feature: Test for Broken Authentication/Authorization Vulnerabilities
  Scenario: Attempt to access merchant without authentication or authorization
    Given url http://oas_london_trafffic.api/merchants/v1/merchant
    When method get
    Then status code is 403 and response contains "Forbidden"
```
2025-02-02 14:22:32,684 - karate_compatibility_verifier - INFO - 
Final verified content:
2025-02-02 14:22:32,684 - karate_compatibility_verifier - INFO -  Feature: Sample API Test

Scenario: Basic GET request
Given url 'https://api.example.com'
And path '/users'
When method GET
Then status 200
And match response == 'expectedResponse'
2025-02-02 14:22:32,684 - karate_compatibility_verifier - INFO - 
Verified content written to: output/karate_feature_files/ID_001_krtestoas_merchants_v1_merchant_GET_verified.feature
2025-02-02 14:22:32,684 - __main__ - WARNING - Compatibility issues found in output/karate_feature_files/ID_001_krtestoas_merchants_v1_merchant_GET.feature:  Feature: Sample API Test

Scenario: Basic GET request
Given url 'https://api.example.com'
And path '/users'
When method GET
Then status 200
And match response == 'expectedResponse'
2025-02-02 14:22:32,685 - karate_llm_test_gen - INFO - Generating Karate test for prompt: 
Given the following API endpoint information:

  ...
2025-02-02 14:22:32,686 - karate_llm_test_gen - INFO - Getting relevant examples for: 
Given the following API endpoint information:

  ...
2025-02-02 14:22:32,707 - karate_llm_test_gen - INFO - Found 3 relevant examples.
2025-02-02 14:22:32,707 - karate_llm_test_gen - INFO - Sending request to http://192.168.1.108:4893/v1/chat/completions
2025-02-02 14:22:41,618 - karate_llm_test_gen - INFO - Response status code: 200
2025-02-02 14:22:41,619 - karate_llm_test_gen - INFO - Generated test case:  Here is a Karate DSL test script to check for potential Broken Authentication/Authorization vulnera...
2025-02-02 14:22:41,620 - __main__ - INFO - Generated Karate test for /merchants/v1/merchant GET at output/karate_feature_files/ID_002_krtestoas_merchants_v1_merchant_GET.feature
2025-02-02 14:22:41,621 - karate_compatibility_verifier - INFO - Original content:
2025-02-02 14:22:41,621 - karate_compatibility_verifier - INFO - Here is a Karate DSL test script to check for potential Broken Authentication/Authorization vulnerabilities on the `/merchants/v1/merchant` endpoint:
```scss
Feature: Test for Broken Authentication/Authorization Vulnerabilities
  Scenario: Attempt to access merchant information without authentication
    Given url http://oas_london_trafffic.api/merchants/v1/merchant
    And request { method: get }
    When status code is not 401
    Then response contains "Merchant details"
```
This test script checks if the `/merchants/v1/merchant` endpoint can be accessed without authentication by sending a GET request to the URL and checking that the response contains "Merchant details". If the endpoint requires authentication, this test will fail.
2025-02-02 14:22:47,451 - karate_compatibility_verifier - INFO - 
Content after compatibility check:
2025-02-02 14:22:47,451 - karate_compatibility_verifier - INFO -  Here is the corrected Karate DSL test script:
```scss
Feature: Test for Broken Authentication/Authorization Vulnerabilities
  Scenario: Attempt to access merchant information without authentication
    Given url http://oas_london_trafffic.api/merchants/v1/merchant
    And request { method: get }
    When status code is not 401
    Then response contains "Merchant details"
```
2025-02-02 14:22:51,120 - karate_compatibility_verifier - INFO - 
Final verified content:
2025-02-02 14:22:51,120 - karate_compatibility_verifier - INFO -  Here is the corrected Karate DSL test script:
```scss
Feature: Test for Broken Authentication/Authorization Vulnerabilities
  Scenario: Attempt to access merchant information without authentication
    Given url http://oas_london_trafffic.api/merchants/v1/merchant
    And request { method: get }
    When status code is not 401
    Then response contains "Merchant details"
```
2025-02-02 14:22:51,120 - karate_compatibility_verifier - INFO - 
Verified content written to: output/karate_feature_files/ID_002_krtestoas_merchants_v1_merchant_GET_verified.feature
2025-02-02 14:22:51,121 - __main__ - WARNING - Compatibility issues found in output/karate_feature_files/ID_002_krtestoas_merchants_v1_merchant_GET.feature:  Here is the corrected Karate DSL test script:
```scss
Feature: Test for Broken Authentication/Authorization Vulnerabilities
  Scenario: Attempt to access merchant information without authentication
    Given url http://oas_london_trafffic.api/merchants/v1/merchant
    And request { method: get }
    When status code is not 401
    Then response contains "Merchant details"
```
2025-02-02 14:22:51,121 - karate_llm_test_gen - INFO - Generating Karate test for prompt: 
Given the following API endpoint information:

  ...
2025-02-02 14:22:51,121 - karate_llm_test_gen - INFO - Getting relevant examples for: 
Given the following API endpoint information:

  ...
2025-02-02 14:22:51,140 - karate_llm_test_gen - INFO - Found 3 relevant examples.
2025-02-02 14:22:51,140 - karate_llm_test_gen - INFO - Sending request to http://192.168.1.108:4893/v1/chat/completions
2025-02-02 14:23:09,347 - karate_llm_test_gen - INFO - Response status code: 200
2025-02-02 14:23:09,347 - karate_llm_test_gen - INFO - Generated test case:  Here's a sample Karate DSL test script to check for Broken Authentication/Authorization vulnerabili...
2025-02-02 14:23:09,348 - __main__ - INFO - Generated Karate test for /merchants/v1/countrysubdivision GET at output/karate_feature_files/ID_003_krtestoas_merchants_v1_countrysubdivision_GET.feature
2025-02-02 14:23:09,348 - karate_compatibility_verifier - INFO - Original content:
2025-02-02 14:23:09,348 - karate_compatibility_verifier - INFO - Here's a sample Karate DSL test script to check for Broken Authentication/Authorization vulnerabilities on the given API endpoint:
```kotlin
Feature: Test for Broken Authentication/Authorization on /merchants/v1/countrysubdivision API Endpoint
  Scenario: Attempt to access country subdivisions without authentication
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = ""
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with invalid authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<invalid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with expired authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<expired-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with valid authentication token but insufficient permissions
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<valid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
```
Note that the above script assumes that the API endpoint requires authentication and has appropriate authorization checks in place. You may need to modify the script based on your specific requirements and implementation details.
2025-02-02 14:23:25,269 - karate_compatibility_verifier - INFO - 
Content after compatibility check:
2025-02-02 14:23:25,269 - karate_compatibility_verifier - INFO -  Here's the corrected Karate DSL script:
```kotlin
Feature: Test for Broken Authentication/Authorization on /merchants/v1/countrysubdivision API Endpoint
  Scenario: Attempt to access country subdivisions without authentication
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = ""
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with invalid authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<invalid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with expired authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<expired-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with valid authentication token but insufficient permissions
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<valid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
```
2025-02-02 14:23:38,605 - karate_compatibility_verifier - INFO - 
Final verified content:
2025-02-02 14:23:38,605 - karate_compatibility_verifier - INFO -  Here's the corrected Karate DSL script:
```kotlin
Feature: Test for Broken Authentication/Authorization on /merchants/v1/countrysubdivision API Endpoint
  Scenario: Attempt to access country subdivisions without authentication
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = ""
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with invalid authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<invalid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with expired authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<expired-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with valid authentication token but insufficient permissions
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<valid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
```
2025-02-02 14:23:38,605 - karate_compatibility_verifier - INFO - 
Verified content written to: output/karate_feature_files/ID_003_krtestoas_merchants_v1_countrysubdivision_GET_verified.feature
2025-02-02 14:23:38,605 - __main__ - WARNING - Compatibility issues found in output/karate_feature_files/ID_003_krtestoas_merchants_v1_countrysubdivision_GET.feature:  Here's the corrected Karate DSL script:
```kotlin
Feature: Test for Broken Authentication/Authorization on /merchants/v1/countrysubdivision API Endpoint
  Scenario: Attempt to access country subdivisions without authentication
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = ""
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with invalid authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<invalid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with expired authentication token
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<expired-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
    
  Scenario: Attempt to access country subdivisions with valid authentication token but insufficient permissions
    Given url "http://oas_london_trafffic.api/merchants/v1/countrysubdivision"
    And request header Authorization = "<valid-token>"
    When method get
    Then status 403
    And match response contains "Access denied"
```
2025-02-02 14:23:38,606 - __main__ - INFO - Moving generated Karate feature files...
2025-02-02 14:23:38,607 - __main__ - INFO - Creating the Karate Test Framework with generated feature files
2025-02-02 14:23:40,782 - __main__ - INFO - Skipping karate test run.
